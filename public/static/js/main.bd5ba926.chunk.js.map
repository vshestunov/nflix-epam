{"version":3,"sources":["components/modal/modal.jsx","components/modal/modalPage.jsx","components/main/friends/friends.jsx","components/main/people/people.jsx","components/main/favorites/favorites.jsx","components/loader/loader.jsx","components/main/profile/profile.jsx","components/main/home/home.jsx","components/filters/MySelect.jsx","components/main/shows/recommendModal/recmodal.jsx","components/main/shows/recommendModal/recmodalPage.jsx","components/main/shows/shows.jsx","components/main/shows/show.jsx","components/main/login/login.jsx","components/main/recomendations/recomendations.jsx","components/main/main.jsx","components/header/header.jsx","components/footer/footer.jsx","App.js","reportWebVitals.js","index.js","components/modal/modal.module.css","components/main/shows/recommendModal/recmodal.module.css"],"names":["MyModal","props","rootClasses","cl","myModal","visible","push","active","className","join","onClick","setVisible","myModalContent","e","stopPropagation","children","ModalPage","to","Friends","useState","friendList","setFriendList","compareMail","setCompareMail","db","getFirestore","auth","getAuth","useEffect","onAuthStateChanged","user","email","a","getDocs","collection","forEach","doc","id","arr","data","friends","man","console","log","isLogin","length","map","name","src","photo","updateDoc","arrayRemove","filter","el","removeFromFriends","isModalVisible","setModalVisible","People","peopleList","includes","arrayUnion","addFriend","Favorites","favArr","setFavArr","favorites","fav","show","image","medium","averageRuntime","genres","rating","average","likes","removeFromFavorites","Loader","Profile","history","useHistory","setName","mail","setMail","setPhoto","displayName","photoURL","isLoading","alt","setIsLogin","Home","MySelect","value","method","onChange","event","action","target","default","options","option","RecModal","RecModalPage","friend","sendRecommend","Shows","isRecModalVisible","setRecModalVisible","showForReccomend","setShowForReccomend","friendsArr","genresArr","shows","genre","genresrSet","Set","genresOptions","recs","likedShows","likedShow","emails","increment","setLikedShows","dislike","like","addToFavs","reccomend","type","placeholder","searchQuery","setSearchQuery","setSelectedFilter","selectedFilter","setSortMethod","sortMethod","Show","params","useParams","setShow","axios","get","response","getShow","original","language","Login","userName","setUsetName","password","setPassword","inputName","setInputName","hasAccount","setHasAccount","login","pass","signInWithEmailAndPassword","then","userCredential","catch","error","code","alert","Message","required","createUserWithEmailAndPassword","updateProfile","setDoc","Date","register","Recommendations","recsArr","setRecsArr","rec","Main","exact","path","render","sortMehod","Header","setModalTrue","Footer","App","setShows","setPeopleList","setIsLoading","querySnapshot","dataAarr","namesArr","setTimeout","sortedShows","useMemo","sort","b","filteredAndSortedShows","sortedAndFilteredAndSearchedShows","toLowerCase","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.bd5ba926.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport cl from './modal.module.css';\r\n\r\nconst MyModal = (props) => {\r\n\r\n    const rootClasses = [cl.myModal]\r\n\r\n    if (props.visible) {\r\n        rootClasses.push(cl.active);\r\n    }\r\n\r\n    return (\r\n        <div className={rootClasses.join(' ')} onClick={() => props.setVisible(false)}>\r\n            <div className={cl.myModalContent} onClick={(e) => e.stopPropagation()}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyModal;","import React from \"react\";\r\nimport MyModal from \"./modal\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst ModalPage = (props) => {\r\n    return (\r\n        <div className=\"modal-cont\">\r\n            <MyModal\r\n                visible={props.visible}\r\n                setVisible={props.setVisible}\r\n            >\r\n                <h3>\r\n                    You are not logged in. Please get to login page to get all\r\n                    App functions.\r\n                </h3>\r\n\r\n                <NavLink to=\"/login\">\r\n                    <button className=\"button modal-button\"> LOGIN </button>\r\n                </NavLink>\r\n            </MyModal>\r\n            <h3>\r\n                You are not logged in. Please get to login page to get all App\r\n                functions.\r\n            </h3>\r\n            <NavLink to=\"/login\">\r\n                <button className=\"button modal-button\"> LOGIN </button>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalPage;\r\n","import React from \"react\";\r\nimport \"./friends.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport ModalPage from \"../../modal/modalPage\";\r\nimport {\r\n    doc,\r\n    getFirestore,\r\n    getDocs,\r\n    updateDoc,\r\n    arrayRemove,\r\n    collection,\r\n} from \"firebase/firestore\";\r\nimport { useState, useEffect } from \"react/cjs/react.development\";\r\nimport { getAuth, onAuthStateChanged } from \"@firebase/auth\";\r\n\r\nconst Friends = (props) => {\r\n    const [friendList, setFriendList] = useState([]);\r\n    const [compareMail, setCompareMail] = useState(\"\");\r\n    const db = getFirestore();\r\n    const auth = getAuth();\r\n\r\n    useEffect(() => {\r\n        onAuthStateChanged(auth, (user) => {\r\n            try {\r\n                setCompareMail(user.email);\r\n                (async () => {\r\n                    const querySnapshot = await getDocs(\r\n                        collection(db, \"users\")\r\n                    );\r\n                    querySnapshot.forEach((doc) => {\r\n                        if (doc.id === user.email) {\r\n                            let arr = [];\r\n                            doc.data().friends.forEach((man) => arr.push(man));\r\n                            setFriendList([...arr]);\r\n                        }\r\n                    });\r\n                })();\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }, [auth, db]);\r\n\r\n    const removeFromFriends = (man) => {\r\n        const user = doc(db, \"users\", compareMail);\r\n        try {\r\n            (async () => {\r\n                await updateDoc(user, {\r\n                    friends: arrayRemove(man),\r\n                });\r\n            })();\r\n            setFriendList(friendList.filter((el) => el.name !== man.name));\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    if (!props.isLogin) {\r\n        return (\r\n            <ModalPage\r\n                visible={props.isModalVisible}\r\n                setVisible={props.setModalVisible}\r\n            ></ModalPage>\r\n        );\r\n    }\r\n\r\n    if (friendList.length) {\r\n        return (\r\n            <div className=\"friends\">\r\n                {friendList.map((man) => {\r\n                    return (\r\n                        <div className=\"friend\" key={man.id}>\r\n                            <h4>Name: {man.name}</h4>\r\n                            <img src={man.photo} />\r\n                            <p>Email: {man.email}</p>\r\n                            <div className=\"friend-button-cont\">\r\n                                <button\r\n                                    className=\"button\"\r\n                                    onClick={() => removeFromFriends(man)}\r\n                                >\r\n                                    Remove from friends\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"friends-empty\">\r\n                <h2>\r\n                    No friend to show. Please visit the PEOPLE page to see all\r\n                    shows:\r\n                </h2>\r\n                <NavLink to=\"/people\">\r\n                    <button className=\"button\">PEOPLE</button>\r\n                </NavLink>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Friends;\r\n","import React, {useEffect} from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport ModalPage from \"../../modal/modalPage\";\r\nimport \"./people.css\";\r\nimport { doc, getFirestore, getDocs, updateDoc, arrayUnion, arrayRemove, collection } from \"firebase/firestore\";\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport { useState } from \"react/cjs/react.development\";\r\n\r\nconst People = (props) => {\r\n    const [compareMail, setCompareMail] = useState('');\r\n    const db = getFirestore();\r\n    const auth = getAuth();\r\n    const [friendList, setFriendList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        onAuthStateChanged(auth, (user) => {\r\n            try {\r\n                setCompareMail(user.email);\r\n                (async () => {\r\n                    const querySnapshot = await getDocs(collection(db, \"users\"));\r\n                    querySnapshot.forEach((doc) => {\r\n                        if(doc.id === user.email) {\r\n                            let arr = [];\r\n                            doc.data().friends.forEach(man => arr.push(man.name));\r\n                            setFriendList([...arr]);\r\n                        }\r\n                    });\r\n                })();\r\n            } catch(e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }, [auth, db]);\r\n\r\n    if (!props.isLogin) {\r\n        return (\r\n            <ModalPage\r\n                visible={props.isModalVisible}\r\n                setVisible={props.setModalVisible}\r\n            ></ModalPage>\r\n        );\r\n    }\r\n\r\n    const addFriend = (man) => {\r\n        const user = doc(db, \"users\", compareMail);\r\n        try {\r\n            (async () => {\r\n                await updateDoc(user, {\r\n                    friends: arrayUnion(man),\r\n                });\r\n            })();\r\n            setFriendList([...friendList, man.name]);\r\n        } catch(e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    const removeFromFriends = (man) => {\r\n        const user = doc(db, \"users\", compareMail);\r\n        try {\r\n            (async () => {\r\n                await updateDoc(user, {\r\n                    friends: arrayRemove(man),\r\n                });\r\n            })();\r\n            setFriendList(friendList.filter(el => el !== man.name));\r\n        } catch(e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"people\">\r\n            {props.peopleList.map((man) => {\r\n                return (\r\n                    <div className=\"man\" key={man.id}>\r\n                            <h4>Name: {man.name}</h4>\r\n                            <img src={man.photo} />\r\n                            <p>Email: {man.email}</p>\r\n                        <div className=\"people-button-cont\">\r\n                        {friendList.includes(man.name) ? (\r\n                                    <button\r\n                                    className=\"button\"\r\n                                    onClick={() => removeFromFriends(man)}\r\n                                >\r\n                                    Remove from friends\r\n                                </button>\r\n                                ) : (\r\n                                    <button\r\n                                    className=\"button\"\r\n                                    onClick={() => addFriend(man)}\r\n                                >\r\n                                    Add to Friends\r\n                                </button>\r\n                                )\r\n\r\n                                }\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default People;\r\n","import React from \"react\";\r\nimport \"./favorites.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport ModalPage from \"../../modal/modalPage\";\r\nimport { doc, getFirestore, getDocs, updateDoc, arrayRemove, collection } from \"firebase/firestore\";\r\nimport { useState, useEffect } from \"react/cjs/react.development\";\r\nimport { getAuth, onAuthStateChanged } from \"@firebase/auth\";\r\n\r\nconst Favorites = (props) => {\r\n    const [favArr, setFavArr] = useState([]);\r\n    const [compareMail, setCompareMail] = useState('');\r\n    const db = getFirestore();\r\n    const auth = getAuth();\r\n\r\n    useEffect(() => {\r\n        onAuthStateChanged(auth, (user) => {\r\n            try {\r\n                setCompareMail(user.email);\r\n                (async () => {\r\n                    const querySnapshot = await getDocs(collection(db, \"users\"));\r\n                    querySnapshot.forEach((doc) => {\r\n                        if(doc.id === user.email) {\r\n                            let arr = [];\r\n                            doc.data().favorites.forEach(fav => arr.push(fav));\r\n                            setFavArr([...arr]);\r\n                        }\r\n                    });\r\n                })();\r\n            } catch(e) {\r\n                console.log(e);\r\n            }\r\n          });\r\n    }, [auth, db]);\r\n\r\n    if (!props.isLogin) {\r\n        return (\r\n            <ModalPage\r\n                visible={props.isModalVisible}\r\n                setVisible={props.setModalVisible}\r\n            ></ModalPage>\r\n        );\r\n    }\r\n\r\n\r\n    const removeFromFavorites = (show) => {\r\n        const user = doc(db, \"users\", compareMail);\r\n        try {\r\n            (async () => {\r\n                await updateDoc(user, {\r\n                    favorites: arrayRemove(show),\r\n                });\r\n            })();\r\n            setFavArr(favArr.filter(el => el.name !== show.name));\r\n        } catch(e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    if (favArr.length) {\r\n        return (\r\n            <div className=\"favorites\">\r\n                {favArr.map((show) => {\r\n                    return (\r\n                        <div className=\"favShow\" key={show.id}>\r\n                            <NavLink to={`shows/${show.id}`}>\r\n                                <h4>{show.name}</h4>\r\n                                <img src={show.image.medium} />\r\n                                <div className=\"fav-show-description-cont\">\r\n                                    <p>Time: {show.averageRuntime}</p>\r\n                                    <p>Genres: {show.genres.join(\", \")}</p>\r\n                                    <p>Rating: {show.rating.average}</p>\r\n                                    <p>Likes: {show.likes}</p>\r\n                                </div>\r\n                            </NavLink>\r\n                            <div className=\"fav-button-cont\">\r\n                            <button\r\n                                className=\"button\"\r\n                                onClick={() => removeFromFavorites(show)}\r\n                            >\r\n                                Remove from favorites\r\n                            </button> \r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"favorites-empty\">\r\n                <h2>\r\n                    No favorite shows yet. Please visit the SHOWS page to see\r\n                    all shows:\r\n                </h2>\r\n                <NavLink to=\"/shows\">\r\n                    <button className=\"button\" onClick={props.setModalVisible(false)}>SHOWS</button>\r\n                </NavLink>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Favorites;\r\n","import React from \"react\";\r\nimport './loader.css';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"lds-dual-ring\"></div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import React from \"react\";\r\nimport \"./profile.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Loader from \"../../loader/loader\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport { useState } from \"react/cjs/react.development\";\r\n\r\nconst Profile = (props) => {\r\n    const auth = getAuth();\r\n    const history = useHistory();\r\n    const [name, setName] = useState('');\r\n    const [mail, setMail] = useState('');\r\n    const [photo, setPhoto] = useState('');\r\n\r\n    onAuthStateChanged(auth, (user) => {\r\n        if (user) {\r\n            setName(user.displayName);\r\n            setMail(user.email);\r\n            setPhoto(user.photoURL);\r\n        }\r\n      });\r\n\r\n    if(props.isLoading) {\r\n        return <Loader />\r\n    }\r\n\r\n    if(!props.isLogin) {\r\n        history.push('/login')\r\n    }\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <div className=\"photo-cont\">\r\n                <img src={photo} alt=\"photo\" />\r\n            </div>\r\n            <div className=\"info-cont\">\r\n                <h2>User Name: {name}</h2>\r\n                <p>e-mail: {mail}</p>\r\n                <NavLink to=\"/login\">\r\n                    <button className=\"button\" onClick={() => props.setIsLogin(false)}>\r\n                        LOGOUT\r\n                    </button>\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./home.css\";\r\n\r\nconst Home = (props) => {\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"headers-cont\">\r\n                <h1>Welcome to my like-a-netflix service</h1>\r\n                <h2>\r\n                    Feel free to use the navigation bar at the header and go\r\n                    throw the App ;){\" \"}\r\n                </h2>\r\n                <h3>My service has such features:</h3>\r\n            </div>\r\n            <div className=\"features-cont\">\r\n                <h4>\r\n                    On <NavLink to=\"/shows\">SHOWS</NavLink> page\r\n                </h4>\r\n                <ul>\r\n                    <li>Uploads the shows from API</li>\r\n                    <li>You can SORT, FILTER and SEARCH shows</li>\r\n                    <li>\r\n                        You can LIKE shows from different accounts and see\r\n                        result from any account\r\n                    </li>\r\n                    <li>You can add/remove shows to FAVORITES</li>\r\n                    <li>You can share shows with your FRIENDS</li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"features-cont\">\r\n                <h4>\r\n                    On <NavLink to=\"/favorites\">FAVORITES</NavLink> page\r\n                </h4>\r\n                <ul>\r\n                    <li>\r\n                        Look at your favorite shows and remove them from this\r\n                        list\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"features-cont\">\r\n                <h4>\r\n                    On <NavLink to=\"/friends\">FRIENDS</NavLink> page\r\n                </h4>\r\n                <ul>\r\n                    <li>Look at your friends and remove them from this list</li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"features-cont\">\r\n                <h4>\r\n                    On <NavLink to=\"/friends\">FRIENDS</NavLink> page\r\n                </h4>\r\n                <ul>\r\n                    <li>Look at your friends and remove them from this list</li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"features-cont\">\r\n                <h4>\r\n                    On <NavLink to=\"/recommendations\">RECOMMENDATIONS</NavLink>{\" \"}\r\n                    page\r\n                </h4>\r\n                <ul>\r\n                    <li>\r\n                        Look at shows which other users (for whom you are a\r\n                        friend) recommended to you\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"features-cont\">\r\n                <h4>\r\n                    On <NavLink to=\"/profile\">PROFILE</NavLink> and{\" \"}\r\n                    <NavLink to=\"/login\">LOGIN</NavLink> pages{\" \"}\r\n                </h4>\r\n                <ul>\r\n                    <li>You can register a new account</li>\r\n                    <li>You can login/logout to your existing account</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst MySelect = (props) => {\r\n    return (\r\n        <select value={props.method} onChange={(event) => props.action(event.target.value)}>\r\n            <option value=''>{props.default}</option>\r\n            {props.options.map((option) => {\r\n                return <option value={option.value} key={option.value}> {option.name} </option>;\r\n            })}\r\n        </select>\r\n    );\r\n};\r\n\r\nexport default MySelect;\r\n","\r\nimport React from 'react';\r\nimport cl from './recmodal.module.css';\r\n\r\nconst RecModal = (props) => {\r\n\r\n    const rootClasses = [cl.myModal]\r\n\r\n    if (props.visible) {\r\n        rootClasses.push(cl.active);\r\n    }\r\n\r\n    return (\r\n        <div className={rootClasses.join(' ')} onClick={() => props.setVisible(false)}>\r\n            <div className={cl.myModalContent} onClick={(e) => e.stopPropagation()}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecModal;","import React from \"react\";\r\nimport RecModal from \"./recmodal\";\r\nimport \"./recmodalpage.css\";\r\n\r\nconst RecModalPage = (props) => {\r\n    return (\r\n        <div className=\"modal-cont\">\r\n            <RecModal visible={props.visible} setVisible={props.setVisible}>\r\n                {props.friends.length ? (\r\n                    <div>\r\n                        <h2>\r\n                            Please choose a friend to send your recommendation:\r\n                        </h2>\r\n                        <div className=\"modal-friends\">\r\n                            {props.friends.map((friend) => {\r\n                                return (\r\n                                    <div className=\"modal-friend\">\r\n                                        <img\r\n                                            className=\"rec-modal-photo\"\r\n                                            src={friend.photo}\r\n                                            alt=\"photo\"\r\n                                        />\r\n                                        <p>{friend.name}</p>\r\n                                        <button\r\n                                            className=\"button rec-modal-button\"\r\n                                            onClick={() =>\r\n                                                props.sendRecommend(friend)\r\n                                            }\r\n                                        >\r\n                                            Send Reccomend\r\n                                        </button>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <h2>You don't have friends yet :( </h2>\r\n                )}\r\n            </RecModal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecModalPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./shows.css\";\r\nimport MyModal from \"../../modal/modal\";\r\nimport Loader from \"../../loader/loader\";\r\nimport MySelect from \"../../filters/MySelect\";\r\nimport {\r\n    doc,\r\n    getFirestore,\r\n    updateDoc,\r\n    arrayUnion,\r\n    arrayRemove,\r\n    getDocs,\r\n    collection,\r\n    setDoc,\r\n    increment,\r\n} from \"firebase/firestore\";\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport RecModalPage from \"./recommendModal/recmodalPage\";\r\n\r\nconst Shows = (props) => {\r\n    const [compareMail, setCompareMail] = useState(\"\");\r\n    const [friendList, setFriendList] = useState([]);\r\n    const db = getFirestore();\r\n    const auth = getAuth();\r\n    const [favArr, setFavArr] = useState([]);\r\n    const [isRecModalVisible, setRecModalVisible] = useState(false);\r\n    let [showForReccomend, setShowForReccomend] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        onAuthStateChanged(auth, (user) => {\r\n            setCompareMail(user.email);\r\n            try {\r\n                (async () => {\r\n                    const querySnapshot = await getDocs(\r\n                        collection(db, \"users\")\r\n                    );\r\n                    querySnapshot.forEach((doc) => {\r\n                        if (doc.id === user.email) {\r\n                            let arr = [];\r\n                            let friendsArr = [];\r\n                            doc.data().favorites.forEach((fav) =>\r\n                                arr.push(fav.name)\r\n                            );\r\n                            doc.data().friends.forEach((man) =>\r\n                                friendsArr.push(man)\r\n                            );\r\n                            setFavArr([...arr]);\r\n                            setFriendList([...friendsArr]);\r\n                        }\r\n                    });\r\n                })();\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }, [auth, db]);\r\n\r\n    let genresArr = [];\r\n    props.shows.map((show) => {\r\n        show.genres.map((genre) => {\r\n            genresArr.push(genre);\r\n        });\r\n    });\r\n\r\n    let genresrSet = [...new Set(genresArr)];\r\n\r\n    let genresOptions = [];\r\n\r\n    genresrSet.map((genre) => {\r\n        genresOptions.push({ value: genre, name: genre });\r\n    });\r\n\r\n    const addToFavs = (show) => {\r\n        if (!props.isLogin) {\r\n            props.setModalVisible(true);\r\n            return null;\r\n        }\r\n        const user = doc(db, \"users\", compareMail);\r\n        try {\r\n            (async () => {\r\n                await updateDoc(user, {\r\n                    favorites: arrayUnion(show),\r\n                });\r\n            })();\r\n            setFavArr([...favArr, show.name]);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    const removeFromFavorites = (show) => {\r\n        const user = doc(db, \"users\", compareMail);\r\n        try {\r\n            (async () => {\r\n                await updateDoc(user, {\r\n                    favorites: arrayRemove(show),\r\n                });\r\n            })();\r\n            setFavArr(favArr.filter((el) => el !== show.name));\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    const like = (show) => {\r\n        if (!props.isLogin) {\r\n            props.setModalVisible(true);\r\n            return null;\r\n        }\r\n        const likedShow = doc(db, \"likedshows\", show.name);\r\n        try {\r\n            (async () => {\r\n                await updateDoc(likedShow, {\r\n                    emails: arrayUnion(compareMail),\r\n                    likes: increment(1),\r\n                });\r\n            })();\r\n            props.setLikedShows([...props.likedShows, show.name]);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    const dislike = (show) => {\r\n        const likedShow = doc(db, \"likedshows\", show.name);\r\n        try {\r\n            (async () => {\r\n                await updateDoc(likedShow, {\r\n                    emails: arrayRemove(compareMail),\r\n                    likes: increment(-1),\r\n                });\r\n            })();\r\n            props.setLikedShows(\r\n                props.likedShows.filter((el) => el !== show.name)\r\n            );\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    const reccomend = (show) => {\r\n        setShowForReccomend({\r\n            name: show.name,\r\n            averageRuntime: show.averageRuntime,\r\n            image: show.image,\r\n            email: compareMail,\r\n            rating: show.rating,\r\n            genres: show.genres,\r\n            id: show.id,\r\n        });\r\n        setRecModalVisible(true);\r\n    };\r\n\r\n    const sendRecommend = (friend) => {\r\n        const user = doc(db, \"users\", friend.email);\r\n        try {\r\n            (async () => {\r\n                console.log(showForReccomend);\r\n                await updateDoc(user, {\r\n                    recs: arrayUnion(showForReccomend),\r\n                });\r\n            })();\r\n            setRecModalVisible(false);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    if (props.isLoading) {\r\n        return <Loader />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"shows\">\r\n            <MyModal\r\n                visible={props.isModalVisible}\r\n                setVisible={props.setModalVisible}\r\n            >\r\n                <h3>\r\n                    You are not logged in. Please get to login page to get all\r\n                    App functions.\r\n                </h3>\r\n\r\n                <NavLink to=\"/login\">\r\n                    <button className=\"button modal-button\"> LOGIN </button>\r\n                </NavLink>\r\n            </MyModal>\r\n            <RecModalPage\r\n                visible={isRecModalVisible}\r\n                setVisible={setRecModalVisible}\r\n                friends={friendList}\r\n                sendRecommend={sendRecommend}\r\n            />\r\n\r\n            <div className=\"shows-cont\">\r\n                {props.shows.map((show) => {\r\n                    return (\r\n                        <div key={show.id} className=\"show\">\r\n                            <NavLink to={`shows/${show.id}`}>\r\n                                <h4>{show.name}</h4>\r\n                                <img src={show.image.medium} />\r\n                                <div className=\"show-description-cont\">\r\n                                    <p>Time: {show.averageRuntime}</p>\r\n                                    <p>Genres: {show.genres.join(\", \")}</p>\r\n                                    <p>Rating: {show.rating.average}</p>\r\n                                    <p>Likes: {show.likes}</p>\r\n                                </div>\r\n                            </NavLink>\r\n                            <div className=\"shows-buttons\">\r\n                                {props.likedShows.includes(show.name) ? (\r\n                                    <button\r\n                                        className=\"button shows-button\"\r\n                                        onClick={() => {\r\n                                            dislike(show);\r\n                                            show.likes--;\r\n                                        }}\r\n                                    >\r\n                                        Disike &#9829;\r\n                                    </button>\r\n                                ) : (\r\n                                    <button\r\n                                        className=\"button shows-button\"\r\n                                        onClick={() => {\r\n                                            like(show);\r\n                                            show.likes++;\r\n                                        }}\r\n                                    >\r\n                                        Like &#9825;\r\n                                    </button>\r\n                                )}\r\n                                {favArr.includes(show.name) ? (\r\n                                    <button\r\n                                        className=\"button shows-button\"\r\n                                        onClick={() =>\r\n                                            removeFromFavorites(show)\r\n                                        }\r\n                                    >\r\n                                        Remove from favorites\r\n                                    </button>\r\n                                ) : (\r\n                                    <button\r\n                                        className=\"button shows-button\"\r\n                                        onClick={() => addToFavs(show)}\r\n                                    >\r\n                                        Add to favorites\r\n                                    </button>\r\n                                )}\r\n                                <button\r\n                                    className=\"button shows-button\"\r\n                                    onClick={() => reccomend(show)}\r\n                                >\r\n                                    Reccomend to friend\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n            <div className=\"filters-cont\">\r\n                <div className=\"filters-fixed-cont\">\r\n                    <h5>Searh by name</h5>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"name\"\r\n                        value={props.searchQuery}\r\n                        onChange={(event) =>\r\n                            props.setSearchQuery(event.target.value)\r\n                        }\r\n                    />\r\n                    <h5>Filter by genres:</h5>\r\n                    <MySelect\r\n                        options={genresOptions}\r\n                        default=\"All genres\"\r\n                        action={props.setSelectedFilter}\r\n                        method={props.selectedFilter}\r\n                    />\r\n                    <h5>Sort shows:</h5>\r\n                    <MySelect\r\n                        options={[\r\n                            {\r\n                                value: \"time, from-top\",\r\n                                name: \"By time from top\",\r\n                            },\r\n                            {\r\n                                value: \"time, from-down\",\r\n                                name: \"By time from down\",\r\n                            },\r\n                            {\r\n                                value: \"rating, from-top\",\r\n                                name: \"By rating from top\",\r\n                            },\r\n                            {\r\n                                value: \"rating, from-down\",\r\n                                name: \"By rating from down\",\r\n                            },\r\n                        ]}\r\n                        default=\"Sort by time or rating\"\r\n                        action={props.setSortMethod}\r\n                        method={props.sortMethod}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Shows;\r\n","import React, { useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport \"./shows.css\";\r\nimport axios from \"axios\";\r\n\r\nconst Show = (props) => {\r\n    const params = useParams();\r\n\r\n    const [show, setShow] = useState({});\r\n\r\n    async function getShow(show) {\r\n        if (show.id) {\r\n            return show;\r\n        } else {\r\n            console.log(show.id);\r\n            const response = await axios.get(\r\n                `https://api.tvmaze.com/shows/${params.id}`\r\n            );\r\n            setShow(response.data);\r\n        }\r\n    }\r\n\r\n    getShow(show);\r\n\r\n    if (show.id) {\r\n        return (\r\n            <div className=\"show-page\">\r\n                <h3>{show.name}</h3>\r\n                <img src={show.image.original} />\r\n                <div className='show-description-cont'>\r\n                    <p>Language: {show.language}</p>\r\n                    <p>Rating: {show.rating.average}</p>\r\n                    <p>Genres: {show.genres.join(\", \")}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return <div className=\"show-page\"></div>;\r\n    }\r\n};\r\n\r\nexport default Show;\r\n","import React, { useState } from \"react\";\r\nimport \"./login.css\";\r\nimport Loader from \"../../loader/loader\";\r\nimport {\r\n    getAuth,\r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword,\r\n    updateProfile\r\n} from \"firebase/auth\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getFirestore, doc, setDoc } from \"firebase/firestore\";\r\n\r\nconst Login = (props) => {\r\n    const [userName, setUsetName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [inputName, setInputName] = useState(\"\");\r\n    const history = useHistory();\r\n    const [hasAccount, setHasAccount] = useState(true);\r\n    const db = getFirestore();\r\n\r\n    if (props.isLoading) {\r\n        return <Loader />;\r\n    }\r\n\r\n    const auth = getAuth();\r\n    const register = (auth, name, pass) => {\r\n        if (!name.includes(\"@\")) {\r\n            alert(\"erro in name\");\r\n        } else if (pass.length < 8) {\r\n            alert(\"error in pass\");\r\n        } else {\r\n            createUserWithEmailAndPassword(auth, name, pass)\r\n                .then((userCredential) => {\r\n                    props.setIsLogin(true);\r\n                    login(auth, userName, password);\r\n                    updateProfile(userCredential.user, {\r\n                        displayName: inputName,\r\n                        photoURL:\r\n                            \"https://media.istockphoto.com/photos/businessman-silhouette-as-avatar-or-default-profile-picture-picture-id476085198?s=612x612\",\r\n                    })\r\n                        .then(() => {\r\n                            console.log(userCredential.user.inputName);\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error.code);\r\n                        });\r\n                    try {\r\n                        (async () => await setDoc(doc(db, \"users\", name), {\r\n                            name: inputName,\r\n                            email: name,\r\n                            id: new Date(),\r\n                            favorites: [],\r\n                            friends: [],\r\n                            recs: [],\r\n                            photoURL: 'https://media.istockphoto.com/photos/businessman-silhouette-as-avatar-or-default-profile-picture-picture-id476085198?s=612x612',\r\n                        }))();\r\n                    } catch (e) {\r\n                        console.error(\"Error adding document: \", e);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    switch (error.code) {\r\n                        case \"auth/invalid-email\": {\r\n                            alert(\"INVALID EMAIL\");\r\n                            break;\r\n                        }\r\n                        case \"auth/email-already-in-use\": {\r\n                            alert(\"email-already-in-use\");\r\n                            break;\r\n                        }\r\n                    }\r\n                    setPassword(\"\");\r\n                    setUsetName(\"\");\r\n                    console.log(\r\n                        `Code: ${error.code}, Message: ${error.Message}`\r\n                    );\r\n                });\r\n        }\r\n    };\r\n\r\n    const login = (auth, name, pass) => {\r\n        signInWithEmailAndPassword(auth, name, pass)\r\n            .then((userCredential) => {\r\n                props.setIsLogin(true);\r\n                history.push(\"/profile\");\r\n            })\r\n            .catch((error) => {\r\n                switch (error.code) {\r\n                    case \"auth/invalid-email\": {\r\n                        alert(\"INVALID EMAIL\");\r\n                        break;\r\n                    }\r\n                    case \"auth/wrong-password\": {\r\n                        alert(\"wrong-password\");\r\n                        break;\r\n                    }\r\n                    case \"auth/user-not-found\": {\r\n                        alert(\"user-not-found\");\r\n                        break;\r\n                    }\r\n                }\r\n                setPassword(\"\");\r\n                setUsetName(\"\");\r\n                console.log(`Code: ${error.code}, Message: ${error.Message}`);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            {hasAccount ? (\r\n                <form className=\"login-form\">\r\n                    <h2>Please type in your credentials to Log In</h2>\r\n                    <span>Username</span>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={userName}\r\n                        placeholder='Your username'\r\n                        onChange={(e) => setUsetName(e.target.value)}\r\n                        required={true}\r\n                    />\r\n                    <span>Password</span>\r\n                    <input\r\n                        type=\"password\"\r\n                        value={password}\r\n                        placeholder='Your password'\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"button\"\r\n                        onClick={() => login(auth, userName, password)}\r\n                    >\r\n                        LOG IN\r\n                    </button>\r\n                    <div>\r\n                        Do not have an account yet? Please click{\" \"}\r\n                        <span\r\n                            className=\"span-link\"\r\n                            onClick={() => setHasAccount(false)}\r\n                        >\r\n                            here\r\n                        </span>{\" \"}\r\n                        to Sign Up!\r\n                    </div>\r\n                </form>\r\n            ) : (\r\n                <form className=\"login-form\">\r\n                    <h2>\r\n                        Please provide your credentials to register an account\r\n                    </h2>\r\n                    <span>Username</span>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={userName}\r\n                        placeholder='Username'\r\n                        onChange={(e) => setUsetName(e.target.value)}\r\n                        required\r\n                    />\r\n                    <span>Password</span>\r\n                    <input\r\n                        type=\"password\"\r\n                        value={password}\r\n                        placeholder='Password'\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                    <span>Full Name</span>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={inputName}\r\n                        placeholder='Full Name'\r\n                        onChange={(e) => setInputName(e.target.value)}\r\n                        required\r\n                    />\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"button\"\r\n                        onClick={() => register(auth, userName, password)}\r\n                    >\r\n                        Sign Up\r\n                    </button>\r\n                    <div>\r\n                        Already have an account? Please click{\" \"}\r\n                        <span\r\n                            className=\"span-link\"\r\n                            onClick={() => setHasAccount(true)}\r\n                        >\r\n                            here\r\n                        </span>{\" \"}\r\n                        to Log in!\r\n                    </div>\r\n                </form>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"./recomendations.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport ModalPage from \"../../modal/modalPage\";\r\nimport {\r\n    doc,\r\n    getFirestore,\r\n    getDocs,\r\n    updateDoc,\r\n    arrayRemove,\r\n    collection,\r\n} from \"firebase/firestore\";\r\nimport { useState, useEffect } from \"react/cjs/react.development\";\r\nimport { getAuth, onAuthStateChanged } from \"@firebase/auth\";\r\n\r\nconst Recommendations = (props) => {\r\n    const [recsArr, setRecsArr] = useState([]);\r\n    const db = getFirestore();\r\n    const auth = getAuth();\r\n\r\n    useEffect(() => {\r\n        onAuthStateChanged(auth, (user) => {\r\n            try {\r\n                (async () => {\r\n                    const querySnapshot = await getDocs(\r\n                        collection(db, \"users\")\r\n                    );\r\n                    querySnapshot.forEach((doc) => {\r\n                        if (doc.id === user.email) {\r\n                            let arr = [];\r\n                            doc.data().recs.forEach((rec) => arr.push(rec));\r\n                            setRecsArr([...arr]);\r\n                        }\r\n                    });\r\n                })();\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }, [auth, db]);\r\n\r\n    if (!props.isLogin) {\r\n        return (\r\n            <ModalPage\r\n                visible={props.isModalVisible}\r\n                setVisible={props.setModalVisible}\r\n            ></ModalPage>\r\n        );\r\n    }\r\n\r\n    if (recsArr.length) {\r\n        return (\r\n            <div className=\"recs\">\r\n                {recsArr.map((show) => {\r\n                    return (\r\n                        <div className=\"recShow\" key={show.id}>\r\n                            <NavLink to={`shows/${show.id}`}>\r\n                                <h4>{show.name}</h4>\r\n                                <img src={show.image.medium} />\r\n                                <div className=\"rec-show-description-cont\">\r\n                                    <p>Time: {show.averageRuntime}</p>\r\n                                    <p>Genres: {show.genres.join(\", \")}</p>\r\n                                    <p>Rating: {show.rating.average}</p>\r\n                                    <p>Recommended by: {show.email}</p>\r\n                                </div>\r\n                            </NavLink>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"recs-empty\">\r\n                <h2>\r\n                    No favorite shows yet. Please visit the SHOWS page to see\r\n                    all shows:\r\n                </h2>\r\n                <NavLink to=\"/shows\">\r\n                    <button\r\n                        className=\"button\"\r\n                        onClick={props.setModalVisible(false)}\r\n                    >\r\n                        SHOWS\r\n                    </button>\r\n                </NavLink>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Recommendations;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Friends from \"./friends/friends\";\r\nimport People from \"./people/people\";\r\nimport Favorites from \"./favorites/favorites\";\r\nimport Profile from \"./profile/profile\";\r\nimport Home from \"./home/home\";\r\nimport Shows from \"./shows/shows\";\r\nimport \"./main.css\";\r\nimport Show from \"./shows/show\";\r\nimport Login from \"./login/login\";\r\nimport Recommendations from \"./recomendations/recomendations\";\r\n\r\nconst Main = (props) => {\r\n    \r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"main-cont\">\r\n                <Route\r\n                    exact\r\n                    path=\"/shows\"\r\n                    render={() => (\r\n                        <Shows\r\n                            shows={props.shows}\r\n                            likedShows={props.likedShows}\r\n                            setLikedShows={props.setLikedShows}\r\n                            isModalVisible={props.isModalVisible}\r\n                            setModalVisible={props.setModalVisible}\r\n                            isLogin={props.isLogin}\r\n                            isLoading={props.isLoading}\r\n                            sortMehod={props.sortMehod}\r\n                            setSortMethod={props.setSortMethod}\r\n                            searchQuery={props.searchQuery}\r\n                            setSearchQuery={props.setSearchQuery}\r\n                            selectedFilter={props.selectedFilter}\r\n                            setSelectedFilter={props.setSelectedFilter}\r\n                            genres={props.genres}\r\n                        />\r\n                    )}\r\n                />\r\n                <Route exact path=\"/shows/:id\" render={() => <Show />} />\r\n                <Route\r\n                    exact\r\n                    path=\"/people\"\r\n                    render={() => (\r\n                        <People\r\n                            peopleList={props.peopleList}\r\n                            isLogin={props.isLogin}\r\n                            isModalVisible={props.isModalVisible}\r\n                            setModalVisible={props.setModalVisible}\r\n                        />\r\n                    )}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path=\"/friends\"\r\n                    render={() => (\r\n                        <Friends\r\n                            isLogin={props.isLogin}\r\n                            isModalVisible={props.isModalVisible}\r\n                            setModalVisible={props.setModalVisible}\r\n                        />\r\n                    )}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path=\"/favorites\"\r\n                    render={() => (\r\n                        <Favorites\r\n                            removeFromFavorites={props.removeFromFavorites}\r\n                            isLogin={props.isLogin}\r\n                            isModalVisible={props.isModalVisible}\r\n                            setModalVisible={props.setModalVisible}\r\n                        />\r\n                    )}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path=\"/recommendations\"\r\n                    render={() => (\r\n                        <Recommendations\r\n                            isLogin={props.isLogin}\r\n                            isModalVisible={props.isModalVisible}\r\n                            setModalVisible={props.setModalVisible}\r\n                        />\r\n                    )}\r\n                />\r\n                <Route exact path=\"/profile\"  render={() => <Profile setIsLogin={props.setIsLogin} isLogin={props.isLogin} isLoading={props.isLoading} />} />\r\n                <Route exact path='/login' render={() => <Login setIsLogin={props.setIsLogin} isLogin={props.isLogin} isLoading={props.isLoading} />} />        \r\n                <Route exact path=\"/\" render={() => <Home />} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport './header.css';\r\n\r\nconst Header = (props) => {\r\n\r\n    const setModalTrue = () => {\r\n        props.setModalVisible(true);\r\n    }\r\n\r\n    const setModalFalse = () => {\r\n        props.setModalVisible(false);\r\n    }\r\n\r\n    return (\r\n        <header className='header'>\r\n            <NavLink className='header-link' exact={true} to=''>HOME</NavLink>\r\n            <NavLink className='header-link' to='/shows' onClick={setModalFalse}>SHOWS</NavLink>\r\n            <NavLink className='header-link' to='/favorites' onClick={setModalTrue}>FAVORITES</NavLink>\r\n            <NavLink className='header-link' to='/people' onClick={setModalTrue}>PEOPLE</NavLink>\r\n            <NavLink className='header-link' to='/friends' onClick={setModalTrue}>FRIENDS</NavLink>\r\n            <NavLink className='header-link' to='/recommendations' onClick={setModalTrue}>RECOMMENDATIONS</NavLink>\r\n            {props.isLogin ? (\r\n                <NavLink className='header-link' to='/profile'>PROFILE</NavLink>\r\n            ) : (\r\n                <NavLink className='header-link' to='/login'>LOGIN</NavLink>\r\n            )\r\n            }\r\n\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport './footer.css';\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <footer className='footer'>\r\n            Netflix by Viacheslav Shestunov, 2021 &copy;\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import \"./App.css\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport Main from \"./components/main/main\";\nimport Header from \"./components/header/header\";\nimport Footer from \"./components/footer/footer\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { getFirestore, collection, getDocs, setDoc, doc } from \"firebase/firestore\";\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\n\nfunction App() {\n    const [shows, setShows] = useState([]);\n    const [genres, setGenres] = useState([]);\n    const [likedShows, setLikedShows] = useState([]);\n    const [peopleList, setPeopleList] = useState([]);\n    const [isLogin, setIsLogin] = useState(false);\n    const [isModalVisible, setModalVisible] = useState(true);\n    const [isLoading, setIsLoading] = useState(false);\n    let [sortMehod, setSortMethod] = useState(\"\");\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [selectedFilter, setSelectedFilter] = useState(\"\");\n    const db = getFirestore();\n\n\n    const auth = getAuth();\n    useEffect(() => {\n        onAuthStateChanged(auth, (user) => {\n            if(user) {\n                try {\n                    (async () => {\n                        const querySnapshot = await getDocs(collection(db, \"users\"));\n                        let arr = [];\n                        querySnapshot.forEach((doc) => {\n                            if(doc.data().email !== user.email) {\n                                arr.push({\n                                    id: doc.id,\n                                    name: doc.data().name,\n                                    email: doc.data().email,\n                                    photo: doc.data().photoURL\n                                })\n                            }\n                        });\n                        setPeopleList([...peopleList, ...arr]);\n                    })();\n                } catch(e) {\n                    console.log(e);\n                }\n            }\n          });\n    }, [auth]);\n\n    useEffect(async function() {\n        if(!auth) {\n            try {\n                const response = await axios.get(\"https://api.tvmaze.com/shows\");\n                setShows(response.data);\n            } catch(e) {\n                console.log(e);\n            }\n        } else {\n            onAuthStateChanged(auth, (user) => {\n                try {\n                    (async () => {\n                        const querySnapshot = await getDocs(collection(db, \"likedshows\"));\n                        let dataAarr = [];\n                        let namesArr = [];\n                        querySnapshot.forEach((doc) => {\n                            dataAarr.push(doc.data());\n                            if(doc.data().emails.includes(user.email)) {\n                                namesArr.push(doc.id);\n                            }\n                        });\n                        setShows([...dataAarr]);\n                        setLikedShows([...namesArr]);\n                    })();\n                } catch(e) {\n                    console.log(e);\n                }\n            });\n        }\n    }, [db, auth]);\n\n    useEffect(() => {\n        setIsLoading(true);\n        setTimeout(() => {\n            setIsLoading(false);\n        }, 200);\n    }, [isLogin]);\n\n    const sortedShows = useMemo(() => {\n        if (sortMehod === \"rating, from-top\") {\n            return [...shows].sort(\n                (a, b) => b.rating.average - a.rating.average\n            );\n        } else if (sortMehod === \"rating, from-down\") {\n            return [...shows].sort(\n                (a, b) => a.rating.average - b.rating.average\n            );\n        } else if (sortMehod === \"time, from-top\") {\n            return [...shows].sort(\n                (a, b) => b.averageRuntime - a.averageRuntime\n            );\n        } else if (sortMehod === \"time, from-down\") {\n            return [...shows].sort(\n                (a, b) => a.averageRuntime - b.averageRuntime\n            );\n        } else if (!sortMehod) {\n            return shows;\n        }\n    }, [shows, sortMehod]);\n\n    const filteredAndSortedShows = useMemo(() => {\n        if (!selectedFilter) {\n            return sortedShows;\n        }\n        return sortedShows.filter((show) => {\n            return show.genres.includes(selectedFilter);\n        });\n    }, [selectedFilter, sortedShows]);\n\n    const sortedAndFilteredAndSearchedShows = useMemo(() => {\n        return filteredAndSortedShows.filter((show) => {\n            return show.name.toLowerCase().includes(searchQuery);\n        });\n    }, [filteredAndSortedShows, searchQuery]);\n\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <Header isLogin={isLogin} setModalVisible={setModalVisible} />\n                <Main\n                    shows={sortedAndFilteredAndSearchedShows}\n                    setLikedShows={setLikedShows}\n                    likedShows={likedShows}\n                    peopleList={peopleList}\n                    isLogin={isLogin}\n                    setIsLogin={setIsLogin}\n                    isModalVisible={isModalVisible}\n                    setModalVisible={setModalVisible}\n                    isLoading={isLoading}\n                    sortMehod={sortMehod}\n                    setSortMethod={setSortMethod}\n                    searchQuery={searchQuery}\n                    setSearchQuery={setSearchQuery}\n                    selectedFilter={selectedFilter}\n                    setSelectedFilter={setSelectedFilter}\n                    genres={genres}\n                />\n                <Footer />\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { createContext } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { initializeApp } from \"firebase/app\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDsIUJT5EzHnTeAMBYFq1961eKAmLzezSs\",\r\n    authDomain: \"nflix-by-vs.firebaseapp.com\",\r\n    projectId: \"nflix-by-vs\",\r\n    storageBucket: \"nflix-by-vs.appspot.com\",\r\n    messagingSenderId: \"553096384035\",\r\n    appId: \"1:553096384035:web:f52dade42cbe450180ab96\",\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myModal\":\"modal_myModal__2VhAq\",\"myModalContent\":\"modal_myModalContent__2yj1T\",\"active\":\"modal_active__2KiCw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myModal\":\"recmodal_myModal__N6ZKJ\",\"myModalContent\":\"recmodal_myModalContent__3xv6L\",\"active\":\"recmodal_active__2-LpD\"};"],"sourceRoot":""}